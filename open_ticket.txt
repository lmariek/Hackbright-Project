- change search result page to like inner html so can have title and 'back to dash' button every page
- add doc type to top of search result
- show case id on top of text box

WED:
- fix case status


SUNDAY: elasticsearch and PPM generation (or OCR PPM for confi)

timeline: https://bootsnipp.com/snippets/a3BjR

elasticsearch: https://marcobonzanini.com/2015/08/10/building-a-search-as-you-type-feature-with-elasticsearch-angularjs-and-flask/
    and: https://marcobonzanini.com/2015/02/02/how-to-query-elasticsearch-with-python/
    https://tryolabs.com/blog/2015/02/17/python-elasticsearch-first-steps/

    https://elasticsearch-py.readthedocs.io/en/master/

    https://stackoverflow.com/questions/46988307/how-do-you-use-the-elasticsearch-ingest-attachment-processor-plugin-with-the-pyt

    ** https://elasticsearch-py.readthedocs.io/en/master/

use this? https://pypi.python.org/pypi/pdfquery

bounding boxes: https://docs.opencv.org/trunk/dc/da5/tutorial_py_drawing_functions.html
https://www.pyimagesearch.com/2015/03/09/capturing-mouse-click-events-with-python-and-opencv/
https://docs.opencv.org/trunk/db/deb/tutorial_display_image.html ****

rectanges: https://stackoverflow.com/questions/17408010/drawing-a-rectangle-using-click-mouse-move-and-click

https://docs.opencv.org/2.4/doc/tutorials/imgproc/shapedescriptors/bounding_rects_circles/bounding_rects_circles.html

0: convert pdf to image
1: find rectangle coordinates
2: draw rectangle (opencv)
3: ocr the text in extracted rectangle image
4: use opencv to puttext on the original image


https://www.bootply.com/fMWRLF0p4D

corp: add PPM question flow and that plus a few more options on the home dash
    - add summary report full functionality (or maybe confi?) w/ OCR

lit: add deadlines and timeline and ability to resume into certain documents

misc: start messing with bounding box functionality


TUESDAY:
- pass in status of case from server
- how pass doc to each download
- es: make highlighted text display in search results
    - make sure can download return results
    - handle no results message
    - 'back to dash' button after search results
- connect dots on lit work flow
- make a summary report OCR
- ability to delete cases
- show pic on canvas and allow draw rectangles
- fix toggle displays on lit dash
- where to put spinner? https://codepen.io/nelsyeung/pen/MwdWmj?page=1&
or https://jsfiddle.net/kimmobrunfeldt/72tkyn40/

Monday:
- make navbar stay at top
- fix lit containers / flex space



MON PM / TUES: set up elasticsearch

TUESDAY: opencv bounding boxes + confi provision

WEDNESDAY: bounding boxes and summary report

redo wireframe on lit side -- add functionality for case pattern + to resume

change db to account for new forms and timestamps (plus due dates)

*****

1. ability to resume case place

2. write basic tests

3. add two corporate forms: text inputs to generate turbo-tax style (LPA & PPM all in one submission route)

4. Fix answer formatting:
 a. underline signature
 b. fix tabbing
 c. correct for pronouns

** 6. get doc to open in browser

 6. refactor to more modular

 7. refactor to pass current case_in through URLs

 11. integrate send answer with gmail!!!

 13. make status on dashboard a percentage of completion

 14. fix click to expand on dashboard

 15. add ability to save notes
 16. add download path (or view) for docs on table

 dashboard:

 - show weather
 - show items in order of what is due
 - allow user to take and save notes in browser
 - show line graph
 - show attorney avail bar chart
 - in expanded: email team / email client

 https://stackoverflow.com/questions/19324301/embed-text-files-in-html
 https://stackoverflow.com/questions/5565759/how-to-embed-a-document-in-html-page

 https://codepen.io/steveg3003/pen/Gqakbo

 http://simpleweatherjs.com/

 http://eqdn.tech/html5-note-app-tutorial/

 gradients!!! https://digitalsynopsis.com/design/beautiful-color-gradients-backgrounds/

(6 or 7)

 **** https://www.html5rocks.com/en/tutorials/offline/storage/

 es:
    0. add docs when they are made to es index
    1. grab input from search box (JS)
    2. make a get request to server with the input
    3. use python wrapper to enter the input to es search
    4. return json of results to js
    5. display results

confiden:
    0.


THURSDAY ^^^


6. D3 the teams on either dashboard or teams page

7. add two more lit forms (one back in, one back out)

8. spinning loader on upload page

9. progress bar on case page

10. check for which doc coming in when make object

11. X textblob: make real nlp tags for data items

12. search engine for uploaded docs

13. bootstrap! make things look nice!

14. make sure everything is spell checked where appropriate

15. do the overlay OCR!!!! opencv (test in new env)


tinymce

fancy form: https://codepen.io/epilande/pen/eZJGpP


d3: http://bl.ocks.org/charlesdguthrie/11356441

http://jsbin.com/tayawutu/17/edit?html,js,output